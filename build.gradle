apply plugin: 'idea'
apply plugin: 'eclipse'
apply plugin: 'java'
//apply plugin: 'checkstyle'
//apply plugin: 'findbugs'
//apply plugin: 'jdepend'
//apply plugin: 'pmd'

idea {
    project {
        jdkName = JavaVersion.VERSION_1_8
        languageLevel = JavaVersion.VERSION_1_8

        ipr.withXml { xml ->
            def mapping = xml.node.component.find { it.@name == "VcsDirectoryMappings" }.mapping
            // mapping.@vcs = 'Git'
            mapping.@directory = '$PROJECT_DIR$'
        }
    }

    workspace.iws.withXml { provider ->
        def junitDefaults = provider.node.component.find {
            it.@name == 'RunManager'
        }.configuration.find {
            it.@type == 'JUnit'
        }
        junitDefaults.option.find { it.@name == 'WORKING_DIRECTORY' }.@value = '$MODULE_DIR$'
    }
}

eclipse {
    classpath {
        containers.remove('org.eclipse.jdt.launching.JRE_CONTAINER')
        containers 'org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.8'
    }
}

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

[compileJava, compileTestJava]*.options*.encoding = 'UTF-8'

tasks.withType(JavaCompile) {
    options.compilerArgs << "-Xlint:unchecked"
    options.compilerArgs << "-Xlint:deprecation"
}

repositories {
    mavenCentral()
    maven { url 'https://oss.jfrog.org/libs-snapshot' }
    maven { url 'http://clinker.netty.io/nexus/content/repositories/snapshots' }

}

ext {
    guavaVersion = '18.0'
    junitVersion = '4.12'
    hamcrestVersion = '1.3'
    mockitoVersion = '1.10.19'
    slf4jVersion = '1.7.12'
    logbackVersion = '1.1.3'
    rxnettyVersion = '0.5.0-SNAPSHOT'
    //nettyVersion = '5.0.0.Alpha3-SNAPSHOT'
    kryoVersion = '3.0.2'
    kryoSerializerVersion = '0.33'
    fstVersion = '2.33'
    commonLang3Version = '3.4'
    ocelliVersion='0.2.0-SNAPSHOT'
}

dependencies {
    compile("com.google.guava:guava:$guavaVersion",
            "org.slf4j:slf4j-api:$slf4jVersion",
            "org.slf4j:jcl-over-slf4j:$slf4jVersion",
            "ch.qos.logback:logback-classic:$logbackVersion",
            "io.reactivex:rxnetty:$rxnettyVersion",
//            "io.netty:netty-buffer:$nettyVersion",
//            "io.netty:netty-codec:$nettyVersion",
//            "io.netty:netty-codec-http:$nettyVersion",
//            "io.netty:netty-common:$nettyVersion",
//            "io.netty:netty-handler:$nettyVersion",
//            "io.netty:netty-resolver:$nettyVersion",
//            "io.netty:netty-transport:$nettyVersion",
//            "io.netty:netty-transport-native-epoll:$nettyVersion",
            "com.esotericsoftware:kryo:$kryoVersion",
            "de.javakaffee:kryo-serializers:$kryoSerializerVersion",
            "de.ruedigermoeller:fst:$fstVersion",
            "org.apache.commons:commons-lang3:$commonLang3Version",
            "javax.servlet:javax.servlet-api:3.1.0",
            "org.codehaus.groovy:groovy-all:2.4.4",
            "com.typesafe:config:1.3.0",
            "com.netflix.ocelli:ocelli-rxnetty:$ocelliVersion"
    )

    testCompile("junit:junit:$junitVersion",
            "org.hamcrest:hamcrest-all:$hamcrestVersion",
            "org.mockito:mockito-core:$mockitoVersion"
    )

}

//checkstyle {
//    configFile = file("$rootProject.projectDir/config/checkstyle/google_checks.xml")
//    toolVersion = '6.7'
//}

task wrapper(type: Wrapper) {
    gradleVersion = '2.2.1'
}

buildscript {
    repositories {
        mavenCentral()
        maven { url 'https://oss.jfrog.org/libs-snapshot' }
        maven { url 'http://clinker.netty.io/nexus/content/repositories/snapshots' }
    }
}
